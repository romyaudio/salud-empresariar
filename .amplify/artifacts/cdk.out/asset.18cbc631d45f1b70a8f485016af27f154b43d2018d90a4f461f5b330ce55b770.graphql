type Transaction @aws_iam @aws_cognito_user_pools {
  type: TransactionType
  amount: Float!
  description: String!
  category: String!
  subcategory: String
  date: AWSDate!
  paymentMethod: TransactionPaymentMethod
  reference: String
  tags: [String]
  attachments: [String]
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

type Category @aws_iam @aws_cognito_user_pools {
  name: String!
  type: CategoryType
  subcategories: [String]!
  color: String!
  icon: String
  isDefault: Boolean!
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

type Budget @aws_iam @aws_cognito_user_pools {
  name: String!
  category: String!
  amount: Float!
  period: BudgetPeriod
  startDate: AWSDate!
  endDate: AWSDate!
  spent: Float!
  isActive: Boolean!
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum TransactionPaymentMethod {
  CASH
  CARD
  TRANSFER
  CHECK
  OTHER
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum BudgetPeriod {
  WEEKLY
  MONTHLY
  YEARLY
}

input AmplifyAIConversationTurnErrorInput {
  errorType: String!
  message: String!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelTransactionConnection @aws_iam @aws_cognito_user_pools {
  items: [Transaction]!
  nextToken: String
}

input ModelTransactionTypeInput {
  eq: TransactionType
  ne: TransactionType
}

input ModelTransactionPaymentMethodInput {
  eq: TransactionPaymentMethod
  ne: TransactionPaymentMethod
}

input ModelTransactionFilterInput {
  type: ModelTransactionTypeInput
  amount: ModelFloatInput
  description: ModelStringInput
  category: ModelStringInput
  subcategory: ModelStringInput
  date: ModelStringInput
  paymentMethod: ModelTransactionPaymentMethodInput
  reference: ModelStringInput
  tags: ModelStringInput
  attachments: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelTransactionFilterInput]
  or: [ModelTransactionFilterInput]
  not: ModelTransactionFilterInput
  owner: ModelStringInput
}

type Query {
  getTransaction(id: ID!): Transaction @aws_iam @aws_cognito_user_pools
  listTransactions(filter: ModelTransactionFilterInput, limit: Int, nextToken: String): ModelTransactionConnection @aws_iam @aws_cognito_user_pools
  getCategory(id: ID!): Category @aws_iam @aws_cognito_user_pools
  listCategories(filter: ModelCategoryFilterInput, limit: Int, nextToken: String): ModelCategoryConnection @aws_iam @aws_cognito_user_pools
  getBudget(id: ID!): Budget @aws_iam @aws_cognito_user_pools
  listBudgets(filter: ModelBudgetFilterInput, limit: Int, nextToken: String): ModelBudgetConnection @aws_iam @aws_cognito_user_pools
}

input ModelTransactionConditionInput {
  type: ModelTransactionTypeInput
  amount: ModelFloatInput
  description: ModelStringInput
  category: ModelStringInput
  subcategory: ModelStringInput
  date: ModelStringInput
  paymentMethod: ModelTransactionPaymentMethodInput
  reference: ModelStringInput
  tags: ModelStringInput
  attachments: ModelStringInput
  and: [ModelTransactionConditionInput]
  or: [ModelTransactionConditionInput]
  not: ModelTransactionConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  owner: ModelStringInput
}

input CreateTransactionInput {
  type: TransactionType
  amount: Float!
  description: String!
  category: String!
  subcategory: String
  date: AWSDate!
  paymentMethod: TransactionPaymentMethod
  reference: String
  tags: [String]
  attachments: [String]
  id: ID
}

input UpdateTransactionInput {
  type: TransactionType
  amount: Float
  description: String
  category: String
  subcategory: String
  date: AWSDate
  paymentMethod: TransactionPaymentMethod
  reference: String
  tags: [String]
  attachments: [String]
  id: ID!
}

input DeleteTransactionInput {
  id: ID!
}

type Mutation {
  createTransaction(input: CreateTransactionInput!, condition: ModelTransactionConditionInput): Transaction @aws_iam @aws_cognito_user_pools
  updateTransaction(input: UpdateTransactionInput!, condition: ModelTransactionConditionInput): Transaction @aws_iam @aws_cognito_user_pools
  deleteTransaction(input: DeleteTransactionInput!, condition: ModelTransactionConditionInput): Transaction @aws_iam @aws_cognito_user_pools
  createCategory(input: CreateCategoryInput!, condition: ModelCategoryConditionInput): Category @aws_iam @aws_cognito_user_pools
  updateCategory(input: UpdateCategoryInput!, condition: ModelCategoryConditionInput): Category @aws_iam @aws_cognito_user_pools
  deleteCategory(input: DeleteCategoryInput!, condition: ModelCategoryConditionInput): Category @aws_iam @aws_cognito_user_pools
  createBudget(input: CreateBudgetInput!, condition: ModelBudgetConditionInput): Budget @aws_iam @aws_cognito_user_pools
  updateBudget(input: UpdateBudgetInput!, condition: ModelBudgetConditionInput): Budget @aws_iam @aws_cognito_user_pools
  deleteBudget(input: DeleteBudgetInput!, condition: ModelBudgetConditionInput): Budget @aws_iam @aws_cognito_user_pools
}

input ModelSubscriptionTransactionFilterInput {
  type: ModelSubscriptionStringInput
  amount: ModelSubscriptionFloatInput
  description: ModelSubscriptionStringInput
  category: ModelSubscriptionStringInput
  subcategory: ModelSubscriptionStringInput
  date: ModelSubscriptionStringInput
  paymentMethod: ModelSubscriptionStringInput
  reference: ModelSubscriptionStringInput
  tags: ModelSubscriptionStringInput
  attachments: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionTransactionFilterInput]
  or: [ModelSubscriptionTransactionFilterInput]
  owner: ModelStringInput
}

type Subscription {
  onCreateTransaction(filter: ModelSubscriptionTransactionFilterInput, owner: String): Transaction @aws_subscribe(mutations: ["createTransaction"]) @aws_iam @aws_cognito_user_pools
  onUpdateTransaction(filter: ModelSubscriptionTransactionFilterInput, owner: String): Transaction @aws_subscribe(mutations: ["updateTransaction"]) @aws_iam @aws_cognito_user_pools
  onDeleteTransaction(filter: ModelSubscriptionTransactionFilterInput, owner: String): Transaction @aws_subscribe(mutations: ["deleteTransaction"]) @aws_iam @aws_cognito_user_pools
  onCreateCategory(filter: ModelSubscriptionCategoryFilterInput, owner: String): Category @aws_subscribe(mutations: ["createCategory"]) @aws_iam @aws_cognito_user_pools
  onUpdateCategory(filter: ModelSubscriptionCategoryFilterInput, owner: String): Category @aws_subscribe(mutations: ["updateCategory"]) @aws_iam @aws_cognito_user_pools
  onDeleteCategory(filter: ModelSubscriptionCategoryFilterInput, owner: String): Category @aws_subscribe(mutations: ["deleteCategory"]) @aws_iam @aws_cognito_user_pools
  onCreateBudget(filter: ModelSubscriptionBudgetFilterInput, owner: String): Budget @aws_subscribe(mutations: ["createBudget"]) @aws_iam @aws_cognito_user_pools
  onUpdateBudget(filter: ModelSubscriptionBudgetFilterInput, owner: String): Budget @aws_subscribe(mutations: ["updateBudget"]) @aws_iam @aws_cognito_user_pools
  onDeleteBudget(filter: ModelSubscriptionBudgetFilterInput, owner: String): Budget @aws_subscribe(mutations: ["deleteBudget"]) @aws_iam @aws_cognito_user_pools
}

type ModelCategoryConnection @aws_iam @aws_cognito_user_pools {
  items: [Category]!
  nextToken: String
}

input ModelCategoryTypeInput {
  eq: CategoryType
  ne: CategoryType
}

input ModelCategoryFilterInput {
  name: ModelStringInput
  type: ModelCategoryTypeInput
  subcategories: ModelStringInput
  color: ModelStringInput
  icon: ModelStringInput
  isDefault: ModelBooleanInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelCategoryFilterInput]
  or: [ModelCategoryFilterInput]
  not: ModelCategoryFilterInput
  owner: ModelStringInput
}

input ModelCategoryConditionInput {
  name: ModelStringInput
  type: ModelCategoryTypeInput
  subcategories: ModelStringInput
  color: ModelStringInput
  icon: ModelStringInput
  isDefault: ModelBooleanInput
  and: [ModelCategoryConditionInput]
  or: [ModelCategoryConditionInput]
  not: ModelCategoryConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  owner: ModelStringInput
}

input CreateCategoryInput {
  name: String!
  type: CategoryType
  subcategories: [String]!
  color: String!
  icon: String
  isDefault: Boolean!
  id: ID
}

input UpdateCategoryInput {
  name: String
  type: CategoryType
  subcategories: [String]
  color: String
  icon: String
  isDefault: Boolean
  id: ID!
}

input DeleteCategoryInput {
  id: ID!
}

input ModelSubscriptionCategoryFilterInput {
  name: ModelSubscriptionStringInput
  type: ModelSubscriptionStringInput
  subcategories: ModelSubscriptionStringInput
  color: ModelSubscriptionStringInput
  icon: ModelSubscriptionStringInput
  isDefault: ModelSubscriptionBooleanInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionCategoryFilterInput]
  or: [ModelSubscriptionCategoryFilterInput]
  owner: ModelStringInput
}

type ModelBudgetConnection @aws_iam @aws_cognito_user_pools {
  items: [Budget]!
  nextToken: String
}

input ModelBudgetPeriodInput {
  eq: BudgetPeriod
  ne: BudgetPeriod
}

input ModelBudgetFilterInput {
  name: ModelStringInput
  category: ModelStringInput
  amount: ModelFloatInput
  period: ModelBudgetPeriodInput
  startDate: ModelStringInput
  endDate: ModelStringInput
  spent: ModelFloatInput
  isActive: ModelBooleanInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelBudgetFilterInput]
  or: [ModelBudgetFilterInput]
  not: ModelBudgetFilterInput
  owner: ModelStringInput
}

input ModelBudgetConditionInput {
  name: ModelStringInput
  category: ModelStringInput
  amount: ModelFloatInput
  period: ModelBudgetPeriodInput
  startDate: ModelStringInput
  endDate: ModelStringInput
  spent: ModelFloatInput
  isActive: ModelBooleanInput
  and: [ModelBudgetConditionInput]
  or: [ModelBudgetConditionInput]
  not: ModelBudgetConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  owner: ModelStringInput
}

input CreateBudgetInput {
  name: String!
  category: String!
  amount: Float!
  period: BudgetPeriod
  startDate: AWSDate!
  endDate: AWSDate!
  spent: Float!
  isActive: Boolean!
  id: ID
}

input UpdateBudgetInput {
  name: String
  category: String
  amount: Float
  period: BudgetPeriod
  startDate: AWSDate
  endDate: AWSDate
  spent: Float
  isActive: Boolean
  id: ID!
}

input DeleteBudgetInput {
  id: ID!
}

input ModelSubscriptionBudgetFilterInput {
  name: ModelSubscriptionStringInput
  category: ModelSubscriptionStringInput
  amount: ModelSubscriptionFloatInput
  period: ModelSubscriptionStringInput
  startDate: ModelSubscriptionStringInput
  endDate: ModelSubscriptionStringInput
  spent: ModelSubscriptionFloatInput
  isActive: ModelSubscriptionBooleanInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionBudgetFilterInput]
  or: [ModelSubscriptionBudgetFilterInput]
  owner: ModelStringInput
}
